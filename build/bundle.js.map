{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Clock.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/Login.svelte","../../src/Progress.svelte","../../src/Lyrics.svelte","../../src/Player.svelte","../../src/Spotify.svelte","../../src/Search.svelte","../../src/Background.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n    $: clock = new Date();\r\n\r\n    let time = new Date();\r\n\r\n    $: year = time.getFullYear();\r\n    $: month = {1: 'jan', 2: 'feb', 3: 'mar', 4: 'apr', 5: 'may', 6: 'jun', 7: 'jul', 8: 'aug', 9: 'sep', 10: 'oct', 11: 'nov', 12: 'dec'}[time.getMonth()+1];\r\n    $: weekDay = {0: 'sun', 1: 'mon', 2: 'tue', 3: 'wed', 4: 'thu', 5: 'fri', 6: 'sat'}[time.getDay()];\r\n    $: day = time.getDate();\r\n    $: hours = (\"0\" + time.getHours()).slice(-2);\r\n    $: minutes = (\"0\" + time.getMinutes()).slice(-2);\r\n    $: seconds = (\"0\" + time.getSeconds()).slice(-2);\r\n\r\n    setInterval(() => {\r\n        time = new Date();\r\n    }, 1000);\r\n</script>\r\n\r\n<div class=\"clock\">\r\n    <p class=\"date\">{weekDay}, {day} {month} {year}</p>\r\n    <p class=\"time\">{hours}:{minutes}:{seconds}</p>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .clock {\r\n        display: inline-block;\r\n        z-index: 999;\r\n\r\n        p {\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n\r\n        .date {\r\n            font-size: 20px;\r\n        }\r\n\r\n        .time {\r\n            font-size: 37px;\r\n        }\r\n    }\r\n</style>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\nexport const logged = writable(false);\r\nexport const query = writable(\"\");\r\nexport const showLyrics = writable(false);","<script>\r\n    function makeID(length) {\r\n        var result = \"\";\r\n        var characters =\r\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(\r\n                Math.floor(Math.random() * charactersLength)\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    var client_id = \"ad006f6397254bbd9dbe5e6bfbb35407\";\r\n    var redirect_uri = location.protocol + \"//\" + location.host + location.pathname;\r\n    let scope = \"user-read-currently-playing\";\r\n    var state = makeID(16);\r\n    let loginUrl = \"https://accounts.spotify.com/authorize\";\r\n    loginUrl += \"?response_type=token\";\r\n    loginUrl += \"&client_id=\" + encodeURIComponent(client_id);\r\n    loginUrl += \"&scope=\" + encodeURIComponent(scope);\r\n    loginUrl += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\r\n    loginUrl += \"&state=\" + encodeURIComponent(state);\r\n\r\n    function login() {\r\n        localStorage.setItem('shouldBeLogged', true);\r\n        location.href = loginUrl;\r\n    }\r\n</script>\r\n\r\n<div class=\"login\">\r\n    <span on:click|preventDefault={login}>log in</span>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .login {\r\n        width: 100%;\r\n        height: 40px;\r\n        background-color: var(--color1);\r\n        border-radius: var(--border-radius);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        \r\n        span {\r\n            font-size: 20px;\r\n            &:hover {\r\n                cursor: pointer;\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n    export let duration;\r\n    export let current;\r\n\r\n    let progress, point;\r\n\r\n    setInterval(() => {\r\n        const r = (current * 100) / duration;\r\n        const pointPixels = (progress.clientWidth * r) / 100;\r\n\r\n        if (pointPixels < progress.clientWidth) {\r\n            point.style.width = `${pointPixels}px`;\r\n        }\r\n    }, 1000);\r\n</script>\r\n\r\n<div class=\"progress\" bind:this={progress}>\r\n    <div class=\"point\" bind:this={point} />\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .progress {\r\n        width: 100%;\r\n        background-color: RGBA(0,0,0,0.4);\r\n        border-radius: 1000px;\r\n        position: relative;\r\n        z-index: 999;\r\n\r\n        .point {\r\n            height: 10px;\r\n            background-color: #4a452e;\r\n            border-radius: 1000px;\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { query, showLyrics } from \"./stores\";\r\n\r\n    let lyrics;\r\n    let visibleLyrics;\r\n\r\n    query.subscribe(async (value) => {\r\n        const url = encodeURI(\r\n            \"https://some-random-api.ml/lyrics?title=\" + value\r\n        );\r\n        const res = await fetch(url);\r\n        const json = await res.json();\r\n\r\n        if (json.error) lyrics = \"No lyrics found\";\r\n        else lyrics = json.lyrics.replace(/\\n/g, \"<br>\");\r\n    });\r\n\r\n    showLyrics.subscribe((value) => {\r\n        visibleLyrics = value;\r\n    });\r\n</script>\r\n\r\n{#if visibleLyrics}\r\n    <div class=\"lyrics\">\r\n        {#if lyrics}\r\n            <p>{@html lyrics}</p>\r\n        {:else}\r\n            <div class=\"loading\" />\r\n        {/if}\r\n    </div>\r\n{/if}\r\n\r\n<style lang=\"scss\">\r\n    .lyrics {\r\n        position: absolute;\r\n        margin: 0;\r\n        height: 290px;\r\n        width: 290px;\r\n        background-color: RGBA(242, 218, 138, 1);\r\n        /* background-color: RGBA(0,0,0,0.5); */\r\n        overflow-y: auto;\r\n        padding: 10px;\r\n        transition-duration: 0.4s;\r\n        -ms-overflow-style: none;\r\n        scrollbar-width: none;\r\n\r\n        p {\r\n            margin: 0;\r\n        }\r\n\r\n        &::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .loading {\r\n        width: 30px;\r\n        height: 30px;\r\n        border: 2px solid var(--color3);\r\n        border-right-color: RGBA(0, 0, 0, 0);\r\n        border-radius: 50%;\r\n        animation: spin 1s infinite;\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    @media (max-width: 420px) {\r\n        .lyrics {\r\n            width: 210px;\r\n            height: 210px;\r\n        }\r\n    }\r\n\r\n    @media (max-height: 647px) and (min-width: 542px) {\r\n        .lyrics {\r\n            width: 210px;\r\n            height: 210px;\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { logged, query, showLyrics } from \"./stores\";\r\n    import Progress from \"./Progress.svelte\";\r\n    import Lyrics from \"./Lyrics.svelte\";\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    let song;\r\n    let currentMs = 0;\r\n    onMount(newSong);\r\n\r\n    setInterval(() => {\r\n        newSong();\r\n    }, 1000);\r\n\r\n    const fakeSong = {\r\n        fake: true,\r\n        progress_ms: 0,\r\n        item: {\r\n            duration_ms: 0,\r\n            id: 42,\r\n            name: \"No song playing\",\r\n            external_urls: {\r\n                spotify: \"\",\r\n            },\r\n            album: {\r\n                name: \"No album playing\",\r\n                external_urls: {\r\n                    spotify: \"\",\r\n                },\r\n                images: [\r\n                    {},\r\n                    {\r\n                        url: \"./Spotify_Icon_RGB_White.png\",\r\n                    },\r\n                ],\r\n            },\r\n            artists: [\r\n                {\r\n                    name: \"No artist playing\",\r\n                    external_urls: {\r\n                        spotify: \"\",\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n\r\n    async function newSong() {\r\n        var res = await fetch(\r\n            \"https://api.spotify.com/v1/me/player/currently-playing\",\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }\r\n        );\r\n\r\n        if (res.status !== 200 && res.status !== 204) {\r\n            logged.set(false);\r\n            song = fakeSong;\r\n        } else {\r\n            let data;\r\n            if (res.status === 204) {\r\n                data = fakeSong;\r\n            } else {\r\n                data = await res.json();\r\n            }\r\n\r\n            if (data.item) {\r\n                if (song) {\r\n                    if (song.item.id !== data.item.id) {\r\n                        song = data;\r\n                        query.update(\r\n                            (n) =>\r\n                                song.item.name + \" \" + song.item.artists[0].name\r\n                        );\r\n                    }\r\n                } else {\r\n                    song = data;\r\n                    query.update(\r\n                        (n) => song.item.name + \" \" + song.item.artists[0].name\r\n                    );\r\n                }\r\n\r\n                currentMs = data.progress_ms;\r\n            } else {\r\n                song = fakeSong;\r\n            }\r\n        }\r\n    }\r\n\r\n    let lyricsVisible = false;\r\n    showLyrics.subscribe((value) => {\r\n        lyricsVisible = value;\r\n    });\r\n\r\n    function checkLyrics(e) {\r\n        if (lyricsVisible) {\r\n            showLyrics.set(false);\r\n            e.target.innerText = 'Show lyrics';\r\n        } else {\r\n            showLyrics.set(true);\r\n            e.target.innerText = 'Hide lyrics';\r\n        }\r\n    }\r\n</script>\r\n\r\n<div class=\"player\">\r\n    {#if song}\r\n        <div class=\"content\">\r\n            <img\r\n                src=\"./Spotify_Icon_RGB_White.png\"\r\n                alt=\"Spotify Icon\"\r\n                class=\"spotify-icon\"\r\n            />\r\n\r\n            <p class=\"title\">\r\n                <a href={song.item.external_urls.spotify} target=\"_blank\"\r\n                    >{song.item.name}</a\r\n                >\r\n            </p>\r\n            <p class=\"album\">\r\n                <a href={song.item.album.external_urls.spotify} target=\"_blank\"\r\n                    >{song.item.album.name}</a\r\n                >\r\n            </p>\r\n            <p class=\"artists\">\r\n                {#each song.item.artists as artist}\r\n                    <a\r\n                        href={artist.external_urls.spotify}\r\n                        target=\"_blank\"\r\n                        class=\"artist\"\r\n                    >\r\n                        {artist.name}\r\n                    </a>\r\n                {/each}\r\n            </p>\r\n            <p class=\"time\">\r\n                {Math.floor(currentMs / 1000 / 60)}:{(\r\n                    \"0\" + Math.floor((currentMs / 1000) % 60)\r\n                ).slice(-2)} / {Math.floor(\r\n                    song.item.duration_ms / 1000 / 60\r\n                )}:{(\r\n                    \"0\" + Math.floor((song.item.duration_ms / 1000) % 60)\r\n                ).slice(-2)}\r\n            </p>\r\n            <Progress duration={song.item.duration_ms} current={currentMs} />\r\n        </div>\r\n        <div class=\"cover\">\r\n            <Lyrics />\r\n            {#if song.fake}\r\n                <img\r\n                    src={song.item.album.images[1].url}\r\n                    alt=\"Album Cover\"\r\n                    class=\"fake\"\r\n                />\r\n            {:else}\r\n                <a href={song.item.external_urls.spotify} target=\"_blank\">\r\n                    <img\r\n                        src={song.item.album.images[1].url}\r\n                        alt=\"Album Cover\"\r\n                    />\r\n                </a>\r\n            {/if}\r\n            <button on:click|preventDefault={checkLyrics}>Show lyrics</button>\r\n        </div>\r\n    {:else}\r\n        loading...\r\n    {/if}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .player {\r\n        background-color: var(--color1);\r\n        padding: 10px 10px;\r\n        padding-bottom: 5px;\r\n        border-radius: var(--border-radius);\r\n        display: inline-block;\r\n        box-shadow: 10px 10px 40px var(--color2);\r\n        width: 330px;\r\n        transition-duration: 0.4s;\r\n\r\n        .content {\r\n            margin: 10px;\r\n            position: relative;\r\n\r\n            .spotify-icon {\r\n                position: absolute;\r\n                width: 50px;\r\n                right: 0;\r\n                bottom: 20px;\r\n                transition: width 0.4s;\r\n            }\r\n\r\n            p {\r\n                margin: 10px 0;\r\n                max-height: 140px;\r\n                overflow-y: auto;\r\n            }\r\n\r\n            .title {\r\n                margin-top: 0;\r\n                font-size: 25px;\r\n            }\r\n\r\n            .artists,\r\n            .album {\r\n                font-size: 13px;\r\n            }\r\n\r\n            .time {\r\n                font-size: 20px;\r\n            }\r\n\r\n            .artist:not(:first-child)::before {\r\n                content: \" - \";\r\n            }\r\n        }\r\n\r\n        .cover {\r\n            position: relative;\r\n            margin: 10px;\r\n            margin-bottom: 0;\r\n            height: 100%;\r\n            img {\r\n                width: 100%;\r\n            }\r\n\r\n            button {\r\n                color: unset;\r\n                background-color: #e8d699;\r\n                border: none;\r\n                cursor: pointer;\r\n                padding: 5px;\r\n                border-radius: 4px;\r\n                width: 100%;\r\n                font-family: unset;\r\n\r\n                &:hover {\r\n                    background-color: #f2c18a;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: unset;\r\n\r\n        &:hover {\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 420px) {\r\n        .player {\r\n            width: 250px;\r\n        }\r\n\r\n        .spotify-icon {\r\n            width: 45px !important;\r\n        }\r\n    }\r\n\r\n    @media (max-height: 647px) and (min-width: 542px) {\r\n        .player {\r\n            display: flex;\r\n            width: 500px;\r\n\r\n            .content {\r\n                width: 50%;\r\n            }\r\n\r\n            .cover {\r\n                width: 50%;\r\n                img {\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n\r\n        .spotify-icon {\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 40px !important;\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { logged } from \"./stores\";\r\n    import Login from \"./Login.svelte\";\r\n    import Player from \"./Player.svelte\";\r\n    \r\n    var urlParams = new URLSearchParams(window.location.hash.replace(\"#\", \"?\"));\r\n    var token = urlParams.get(\"access_token\");\r\n\r\n    if (token) {\r\n        localStorage.setItem(\"token\", token);\r\n        location.href = location.protocol + \"//\" + location.host + location.pathname;\r\n    }\r\n\r\n    let loggedIn = false;\r\n    let error = {\r\n        error: false,\r\n        message: '',\r\n    };\r\n\r\n    logged.subscribe((value) => {\r\n        loggedIn = value;\r\n    });\r\n\r\n    onMount(async () => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            let res = await fetch(\"https://api.spotify.com/v1/me\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            if (res.status === 200) {\r\n                logged.set(true);\r\n            } else {\r\n                logged.set(false);\r\n\r\n                if (localStorage.getItem('shouldBeLogged') === 'true') {\r\n                    alert(\"couldn't log you in, make sure you're in whitelist (app not released yet)\");\r\n                }\r\n                localStorage.removeItem('token');\r\n            }\r\n        }\r\n        localStorage.setItem('shouldBeLogged', false);\r\n    });\r\n</script>\r\n\r\n<div class=\"spotify\">\r\n    {#if !loggedIn}\r\n        <Login />\r\n    {:else}\r\n        <Player />\r\n    {/if}\r\n</div>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    let searchInput, engine;\r\n    let enginesSelectionOpen = false;\r\n\r\n    let engines = {\r\n        google: {\r\n            name: \"Google\",\r\n            url: \"https://www.google.com/search?q=\",\r\n            icon: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/1024px-Google_%22G%22_Logo.svg.png\"\r\n        },\r\n        duckduckgo: {\r\n            name: \"DuckDuckGo\",\r\n            url: \"https://duckduckgo.com/?q=\",\r\n            icon: \"https://duckduckgo.com/assets/icons/meta/DDG-icon_256x256.png\"\r\n        },\r\n        bing: {\r\n            name: \"Bing\",\r\n            url: \"https://www.bing.com/search?q=\",\r\n            icon: \"https://news.thewindowsclub.com/wp-content/uploads/2020/10/Bing-Logo.png\"\r\n        }\r\n    };\r\n\r\n    if (\r\n        localStorage.getItem(\"engine\") &&\r\n        engines[localStorage.getItem(\"engine\")]\r\n    )\r\n        engine = engines[localStorage.getItem(\"engine\")];\r\n    else engine = engines.google;\r\n\r\n    console.log(engine);\r\n\r\n    onMount(() => {\r\n        searchInput.addEventListener(\"keydown\", (e) => {\r\n            if (e.keyCode === 13) {\r\n                location.href = engine.url + encodeURIComponent(searchInput.value);\r\n            }\r\n        });\r\n    });\r\n\r\n    function openEngineSelection() {\r\n        enginesSelectionOpen = true;\r\n    }\r\n\r\n    function closeEngineSelection() {\r\n        enginesSelectionOpen = false;\r\n    }\r\n\r\n    function changeEngine(e) {\r\n        engine = engines[e];\r\n        localStorage.setItem(\"engine\", e);\r\n        enginesSelectionOpen = false;\r\n    }\r\n</script>\r\n\r\n{#if enginesSelectionOpen}\r\n    <div class=\"engines-parent\" on:click={closeEngineSelection}>\r\n        <div class=\"engines\">\r\n            {#each Object.keys(engines) as engine}\r\n                <div\r\n                    class=\"engine\"\r\n                    on:click|preventDefault={() => {\r\n                        changeEngine(engine);\r\n                    }}\r\n                >\r\n                    <img\r\n                        src={engines[engine].icon}\r\n                        alt={engines[engine].name}\r\n                    />\r\n                    <p>{engines[engine].name}</p>\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n<div class=\"search\">\r\n    <img\r\n        src={engine.icon}\r\n        alt={engine.name}\r\n        on:click|preventDefault={openEngineSelection}\r\n    />\r\n    <input\r\n        bind:this={searchInput}\r\n        type=\"text\"\r\n        placeholder=\"Search something...\"\r\n    />\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .engines-parent {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background-color: RGBA(0, 0, 0, 0.2);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 9999;\r\n\r\n        .engines {\r\n            background-color: var(--color1);\r\n            border-radius: var(--border-radius);\r\n\r\n            .engine {\r\n                cursor: pointer;\r\n                padding: 10px;\r\n                display: flex;\r\n                align-items: center;\r\n                width: 50vw;\r\n\r\n                &:not(:first-child) {\r\n                    border-top: 1px solid black;\r\n                }\r\n\r\n                img {\r\n                    width: 35px;\r\n                    height: 35px;\r\n                    margin-right: 10px;\r\n                }\r\n\r\n                &:hover {\r\n                    background-color: RGBA(0, 0, 0, 0.05);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .search {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 10px;\r\n        background-color: var(--color1);\r\n        border-radius: var(--border-radius);\r\n\r\n        img {\r\n            width: 20px;\r\n            height: 20px;\r\n            margin-right: 10px;\r\n            cursor: pointer;\r\n        }\r\n\r\n        input {\r\n            border: none;\r\n            background: none;\r\n            font-family: unset;\r\n            color: unset;\r\n            outline: none;\r\n            border-bottom: solid 1px RGBA(0, 0, 0, 0);\r\n            transition: border-bottom-color 0.2s;\r\n            width: 100%;\r\n            padding: 2px;\r\n\r\n            &:focus {\r\n                border-bottom-color: var(--color3);\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","<div class=\"background\">\r\n    <img src=\"./sun.svg\" alt=\"sun\" class=\"sun\" />\r\n    <img class=\"sand\" src=\"./sand.svg\" alt=\"sand\" />\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n    .background {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: -1;\r\n        overflow-x: hidden;\r\n\r\n        .sun {\r\n            width: 250px;\r\n            position: absolute;\r\n            top: 50px;\r\n            left: 50px;\r\n            transition-duration: .4s;\r\n        }\r\n\r\n        .sand {\r\n            width: 100vw;\r\n            position: absolute;\r\n            bottom: 0;\r\n        }\r\n    }\r\n\r\n    @media (max-width: 971px) {\r\n        .background {\r\n            .sun {\r\n                width: 200px;\r\n                top: 10px;\r\n                left: 10px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-width: 700px) {\r\n        .background {\r\n            .sand {\r\n                width: 800px;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n    import Clock from \"./Clock.svelte\";\r\n    import Spotify from \"./Spotify.svelte\";\r\n    import Search from \"./Search.svelte\";\r\n    import Background from \"./Background.svelte\";\r\n</script>\r\n\r\n<main>\r\n    <Background />\r\n\r\n    <div class=\"container\">\r\n        <div class=\"search\">\r\n            <Search />\r\n        </div>\r\n        <div class=\"clock\">\r\n            <Clock />\r\n        </div>\r\n        <div class=\"spotify\">\r\n            <Spotify />\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n<style lang=\"scss\">\r\n    main {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 100vh;\r\n        position: relative;\r\n        \r\n        .container {\r\n            margin: 0;\r\n            padding: 0;\r\n\r\n            div {\r\n                margin: 20px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @media (max-height: 647px) and (min-width: 542px) {\r\n        main {\r\n            .container {\r\n                display: flex;\r\n                align-items: center;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n    target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","div","p0","p1","time","Date","setInterval","$$invalidate","year","getFullYear","month","getMonth","weekDay","getDay","day","getDate","hours","getHours","slice","minutes","getMinutes","seconds","getSeconds","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","logged","query","showLyrics","span","redirect_uri","location","protocol","host","pathname","state","result","characters","charactersLength","charAt","Math","floor","random","makeID","loginUrl","encodeURIComponent","localStorage","setItem","div1","div0","progress","point","duration","current","pointPixels","clientWidth","style","width","$$value","create_if_block_1","create_if_block","lyrics","visibleLyrics","async","encodeURI","res","fetch","json","error","replace","item","t3_value","album","t6_value","t8_value","duration_ms","t12_value","artists","fake","a0","a0_href_value","external_urls","spotify","a1","a1_href_value","img","p2","p3","button","t1","t1_value","t3","t6","t8","t10","t10_value","t12","t0_value","t0","images","img_src_value","a_href_value","token","getItem","song","currentMs","newSong","fakeSong","progress_ms","id","headers","Authorization","status","n","lyricsVisible","e","innerText","URLSearchParams","window","hash","get","loggedIn","alert","removeItem","icon","src","img_alt_value","input","searchInput","engine","enginesSelectionOpen","engines","google","duckduckgo","bing","changeEngine","console","log","keyCode","main","div3","div2","body"],"mappings":"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"}